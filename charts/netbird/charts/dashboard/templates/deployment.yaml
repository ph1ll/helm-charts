apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dashboard.fullname" . }}
  labels:
    {{- include "dashboard.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "dashboard.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dashboard.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dashboard.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NETBIRD_MGMT_API_ENDPOINT
              value: "https://{{ .Values.global.netbird.domain }}"
            - name: NETBIRD_MGMT_GRPC_API_ENDPOINT
              value: "https://{{ .Values.global.netbird.domain }}"
            - name: AUTH_AUDIENCE
              value: "{{ .Values.config.auth.audience }}"
            - name: AUTH_CLIENT_ID
              value: "{{ .Values.config.auth.clientId }}"
            {{- if and .Values.config.auth.clientSecret .Values.config.auth.clientSecret.value }}
            {{- if not .Values.config.auth.clientSecret.existingSecret }}
              - name: AUTH_CLIENT_SECRET
                value: "{{ .Values.config.auth.clientSecret.value }}"
            {{- end }}
            {{- end }}
            {{- if and .Values.config.auth.clientSecret .Values.config.auth.clientSecret.existingSecret }}
            - name: AUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef: 
                  name: {{ .Values.config.auth.clientSecret.existingSecret }}
                  key: NETBIRD_AUTH_CLIENT_SECRET
            {{- end }}
            - name: AUTH_AUTHORITY
              value: "{{ .Values.config.auth.authority }}"
            - name: USE_AUTH0
              value: "{{ .Values.config.useAuth0 | default "false" }}"
            - name: AUTH_SUPPORTED_SCOPES
              value: "{{ .Values.config.auth.supportedScopes }}"
            - name: AUTH_REDIRECT_URI
              value: "{{ .Values.config.auth.redirectUri }}"
            - name: AUTH_SILENT_REDIRECT_URI
              value: "{{ .Values.config.auth.silentRedirectUri }}"
            - name: NETBIRD_TOKEN_SOURCE
              value: "{{ .Values.config.tokenSource }}"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
