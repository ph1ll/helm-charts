global:
  netbird:
    domain: netbird.example.com
    relayAuthSecret:
      existingSecret:
        name: netbird-secrets

dashboard:
  enabled: true
  ingress:
    enabled: true
    className: ""
    annotations: {}
      # cert-manager.io/cluster-issuer: letsencrypt
  config:
    auth:
      ##
      ## The value for 'AUTH_AUDIENCE'
      ##
      audience: ""
      ##
      ## The value for 'AUTH_CLIENT_ID'
      ##
      clientId: ""
      ##
      ## The value for 'AUTH_CLIENT_SECRET'
      ##
      ## Use 'value' to insecurely set or use 'existingSecret' to use an existing secret. 'existingSecret'
      ## will override any 'value'.
      ##
      clientSecret:
        value: ""
        ##
        ## This secret can be created as follows:
        ##
        ##   kubectl -n netbird create secret generic netbird-dashboard --from-literal=NETBIRD_AUTH_CLIENT_SECRET=<secret>
        ##
        existingSecret: ""
      ##
      ## The value for 'AUTH_AUTHORITY'
      ##
      authority: ""
      ##
      ## The value for 'AUTH_SUPPORTED_SCOPES'
      ##
      supportedScopes: ""
      ##
      ## The value for 'AUTH_REDIRECT_URI'
      ##
      redirectUri: ""
      ##
      ## The value for 'AUTH_SILENT_REDIRECT_URI'
      ##
      silentRedirectUri: ""
    ##
    ## The value for 'USE_AUTH0'
    ##
    useAuth0: false
    ##
    ## The value for 'NETBIRD_TOKEN_SOURCE'
    ##
    tokenSource: ""

management:
  enabled: true
  persistence:
    enabled: true
  ingress:
    grpc:
      enabled: true
      className: ""
      annotations: {}
        # cert-manager.io/cluster-issuer: letsencrypt
        # nginx.ingress.kubernetes.io/backend-protocol: GRPC
        # nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
        # nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
        # nginx.ingress.kubernetes.io/configuration-snippet: |
        #   grpc_socket_keepalive on;
    http:
      enabled: true
      className: ""
      annotations: {}
        # cert-manager.io/cluster-issuer: letsencrypt
  # dnsDomain: netbird.selfhosted
  # singleAccountModeDomain: example.com
  # disableAnonymousMetrics: false
  # config:
  #   Stuns:
  #     - URI: stun:turn.example.com:3478
  #     - URI: stun:stun1.l.google.com:3478
  #     - URI: stun:stun2.l.google.com:3478
  #     - URI: stun:stun3.l.google.com:3478
  #     - URI: stun:stun4.l.google.com:3478
  #   TURNConfig:
  #     Turns:
  #       - URI: turn:turn.example.com:3478
  #         Username: "$NETBIRD_TURN_USER"
  #         Password: "$NETBIRD_TURN_PASSWORD"
  #   Relay:
  #     Addresses:
  #       - "rels://netbird.example.com/relay"
  #     Secret: "$NETBIRD_RELAY_AUTH_SECRET"
  #   Signal:
  #     URI: netbird.example.com:443
  #   ReverseProxy:
  #     TrustedPeers:
  #       - 0.0.0.0/0
  #   DataStoreEncryptionKey: "$NETBIRD_DATASTORE_ENC_KEY"

relay:
  enabled: true
  ingress:
    enabled: true
    className: ""
    annotations: {}
      # cert-manager.io/cluster-issuer: letsencrypt
      # nginx.org/websocket-services: http
    

signal:
  enabled: true
  ingress:
    enabled: true
    className: ""
    annotations: {}
      # cert-manager.io/cluster-issuer: letsencrypt
      # nginx.ingress.kubernetes.io/backend-protocol: GRPC
      # nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
      # nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
      # nginx.ingress.kubernetes.io/configuration-snippet: |
      #   grpc_socket_keepalive on;
