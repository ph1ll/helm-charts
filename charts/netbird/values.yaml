global:
  netbird:
    domain: netbird.example.com

dashboard:
  enabled: false
  ingress:
    enabled: true
    className: ""
    annotations:
      {}
      # cert-manager.io/cluster-issuer: letsencrypt
  config:
    auth:
      ##
      ## The value for 'AUTH_AUDIENCE'
      ##
      audience: ""
      ##
      ## The value for 'AUTH_CLIENT_ID'
      ##
      clientId: ""
      ##
      ## The value for 'AUTH_CLIENT_SECRET'
      ##
      ## Use 'value' to insecurely set or use 'existingSecret' to use an existing secret. 'existingSecret'
      ## will override any 'value'.
      ##
      clientSecret:
        value: ""
        ##
        ## This secret can be created as follows:
        ##
        ##   kubectl -n netbird create secret generic netbird-dashboard --from-literal=NETBIRD_AUTH_CLIENT_SECRET=<secret>
        ##
        existingSecret: ""
      ##
      ## The value for 'AUTH_AUTHORITY'
      ##
      authority: ""
      ##
      ## The value for 'AUTH_SUPPORTED_SCOPES'
      ##
      supportedScopes: ""
      ##
      ## The value for 'AUTH_REDIRECT_URI'
      ##
      redirectUri: ""
      ##
      ## The value for 'AUTH_SILENT_REDIRECT_URI'
      ##
      silentRedirectUri: ""
    ##
    ## The value for 'USE_AUTH0'
    ##
    useAuth0: false
    ##
    ## The value for 'NETBIRD_TOKEN_SOURCE'
    ##
    tokenSource: ""

management:
  enabled: false
  persistence:
    enabled: true
  ingress:
    grpc:
      enabled: true
      className: ""
      annotations:
        {}
        # cert-manager.io/cluster-issuer: letsencrypt
        # nginx.ingress.kubernetes.io/backend-protocol: GRPC
        # nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
        # nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
        # nginx.ingress.kubernetes.io/configuration-snippet: |
        #   grpc_socket_keepalive on;
    http:
      enabled: true
      className: ""
      annotations:
        {}
        # cert-manager.io/cluster-issuer: letsencrypt
  dnsDomain: netbird.selfhosted
  singleAccountModeDomain: example.com
  disableAnonymousMetrics: false
  config:
    ##
    ## This secret can be created from an existing management.json file as follows:
    ##
    ##   kubectl -n netbird create secret generic netbird-management-configuration --from-file=./management.json
    ##
    ## See https://docs.netbird.io/selfhosted/selfhosted-guide for a guide to creating the management.json.
    ##
    ## Ensure the management.json has been populated with a value for 'DataStoreEncryptionKey', which
    ## can be generated using 'openssl rand -base64 32'.
    ##
    existingSecret: ""

relay:
  enabled: false
  ingress:
    enabled: true
    className: ""
    annotations:
      {}
      # cert-manager.io/cluster-issuer: letsencrypt
      # nginx.org/websocket-services: http
  relayAuthSecret:
    ##
    ## This secret can be created as follows:
    ##
    ##   kubectl -n netbird create secret generic netbird-relay-secret --from-literal=NETBIRD_RELAY_AUTH_SECRET=<secret>
    ##
    existingSecret:
      name: netbird-relay-secret

signal:
  enabled: false
  ingress:
    enabled: true
    className: ""
    annotations:
      {}
      # cert-manager.io/cluster-issuer: letsencrypt
      # nginx.ingress.kubernetes.io/backend-protocol: GRPC
      # nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
      # nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
      # nginx.ingress.kubernetes.io/configuration-snippet: |
      #   grpc_socket_keepalive on;
